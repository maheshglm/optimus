group 'com.testvagrant'
version '3.1.6'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    apply plugin: 'maven'
    apply plugin: 'signing'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    ext.cukesVersion = '4.2.6'

    dependencies {
        compile group: 'io.cucumber', name: 'cucumber-junit', version: "$cukesVersion"
        compile group: 'io.cucumber', name: 'cucumber-core', version: "$cukesVersion"
        compile group: 'io.cucumber', name: 'cucumber-java', version: "$cukesVersion"
        compile group: 'io.cucumber', name: 'cucumber-java8', version: "$cukesVersion"
        compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
        compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'
        compile group: 'log4j', name: 'log4j', version: '1.2.17'
        compile group: 'org.codehaus.jackson', name: 'jackson-jaxrs', version: '1.8.5'
        compile group: 'com.jayway.awaitility', name: 'awaitility', version: '1.7.0'
        compile group: 'org.json', name: 'json', version: '20160810'
        compile group: 'org.apache.commons', name: 'commons-exec', version: '1.3'
        compile 'net.coobird:thumbnailator:0.4.8'
        compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.4.2'
        compile group: 'org.codehaus.jackson', name: 'jackson-jaxrs', version: '1.8.5'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.2'
        compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
        compile 'io.rest-assured:rest-assured:3.0.6'
        compile 'org.codehaus.groovy:groovy-all:2.4.7'
        compile group: 'org.apache.opennlp', name: 'opennlp-tools', version: '1.6.0'
        compile group: 'org.apache.opennlp', name: 'opennlp-uima', version: '1.6.0'
        compile group: 'org.json', name: 'json', version: '20160810'
        compile group: 'io.appium', name: 'java-client', version: '7.3.0'
        compile group: 'org.codehaus.jackson', name: 'jackson-jaxrs', version: '1.8.5'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0.pr4'
        compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.0.pr4'


        testCompile group: 'junit', name: 'junit', version: '4.11'
        testCompile "org.mockito:mockito-core:2.8.47"
        testCompile group: 'org.testng', name: 'testng', version: '6.11'
    }


}

subprojects.each { subproject ->
    evaluationDependsOn(subproject.path)
}

subprojects {
    tasks.withType(Jar).all { jarTask ->
        manifest {
            attributes("Artifact": baseName, "Group": rootProject.group, "Build-Version": version)
        }
    }

}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}


task mmJar(type: Jar, dependsOn: subprojects.jar) {
    subprojects.each { subproject ->
        from subproject.configurations.archives.artifacts.files.collect {
            zipTree(it)
        }
    }
}

artifacts {
    archives sourcesJar, javadocJar, mmJar
}

signing {
    sign configurations.archives
}

install.dependsOn mmJar
//
subprojects.each { subproject -> evaluationDependsOn(subproject.path) }


group = "com.testvagrant"
archivesBaseName = "optimus"
version = "3.1.6"

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'Optimus'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'The optimus core project that manages smart bots and their functioning for test scenarios'
                url 'https://bitbucket.org/KrishnanandB/optimus'

                scm {
                    connection 'scm:https://github.com/testvagrant/optimus.git'
                    url 'https://sukesh_testvagrant@bitbucket.org/KrishnanandB/optimus.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'sukesh'
                        name 'Sukesh Kumar'
                        email 'sukesh@testvagrant.com'
                    }
                    developer {
                        id 'krishnanandb'
                        name 'Krishnanand B'
                        email 'krishnanand@testvagrant.com'
                    }
                }
            }
        }
    }
}



